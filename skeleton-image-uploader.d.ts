/**
 * DO NOT EDIT
 *
 * This file was automatically generated by
 *   https://github.com/Polymer/gen-typescript-declarations
 *
 * To modify these typings, edit the source file(s):
 *   skeleton-image-uploader.js
 *   skeleton-image-uploader.js
 */

/// <reference path="load-image.d.ts" />

/**
 * `skeleton-image-uploader`
 */
declare class SkeletonImageUploader extends Polymer.Element {
  path: string|null|undefined;
  imageDataUrl: object|null|undefined;
  imageAnalysing: boolean|null|undefined;
  uploading: boolean|null|undefined;
  uploadProgress: number|null|undefined;
  readonly uploaded: boolean|null|undefined;
  readonly progressValue: number|null|undefined;
  circle: boolean|null|undefined;
  horizontal: boolean|null|undefined;
  readonly showCircleProgress: boolean|null|undefined;
  readonly showHorizontalProgress: boolean|null|undefined;
  strokeWidth: number|null|undefined;
  src: string|null|undefined;
  imageVisionError: boolean|null|undefined;
  readonly imageSafe: boolean|null|undefined;
  imageUnsafeLogos: boolean|null|undefined;
  imageUnsafeAdult: boolean|null|undefined;
  imageUnsafeSpoof: boolean|null|undefined;
  imageUnsafeMedical: boolean|null|undefined;
  imageUnsafeViolence: boolean|null|undefined;
  contentType: string|null|undefined;
  metadata: object|null|undefined;
  readonly finalMetadata: object|null|undefined;
  disabled: boolean|null|undefined;
  vision: string|null|undefined;
  placeholder: string|null|undefined;
  captureMethod: string|null|undefined;
  exist: boolean|null|undefined;
  maxWidth: number|null|undefined;
  maxHeight: number|null|undefined;
  minWidth: number|null|undefined;
  minHeight: number|null|undefined;
  sizing: string|null|undefined;

  /**
   * Error
   */
  error: object|null|undefined;
  checkAdult: boolean|null|undefined;
  checkMedical: boolean|null|undefined;
  checkSpoof: boolean|null|undefined;
  checkViolence: boolean|null|undefined;

  /**
   * Ready event
   */
  connectedCallback(): void;

  /**
   * Start taking a picture.
   */
  capture(): void;

  /**
   * Remove file from storage
   */
  remove(): any;
}

interface HTMLElementTagNameMap {
  "skeleton-image-uploader": SkeletonImageUploader;
  "skeleton-image-uploader": SkeletonImageUploader;
}

/**
 * `skeleton-image-uploader`
 */
declare class SkeletonImageUploader extends Polymer.Element {
  path: string|null|undefined;
  imageDataUrl: object|null|undefined;
  imageAnalysing: boolean|null|undefined;
  uploading: boolean|null|undefined;
  uploadProgress: number|null|undefined;
  readonly uploaded: boolean|null|undefined;
  readonly progressValue: number|null|undefined;
  circle: boolean|null|undefined;
  horizontal: boolean|null|undefined;
  readonly showCircleProgress: boolean|null|undefined;
  readonly showHorizontalProgress: boolean|null|undefined;
  strokeWidth: number|null|undefined;
  src: string|null|undefined;
  imageVisionError: boolean|null|undefined;
  readonly imageSafe: boolean|null|undefined;
  imageUnsafeLogos: boolean|null|undefined;
  imageUnsafeAdult: boolean|null|undefined;
  imageUnsafeSpoof: boolean|null|undefined;
  imageUnsafeMedical: boolean|null|undefined;
  imageUnsafeViolence: boolean|null|undefined;
  contentType: string|null|undefined;
  metadata: object|null|undefined;
  readonly finalMetadata: object|null|undefined;
  disabled: boolean|null|undefined;
  vision: string|null|undefined;
  placeholder: string|null|undefined;
  captureMethod: string|null|undefined;
  exist: boolean|null|undefined;
  maxWidth: number|null|undefined;
  maxHeight: number|null|undefined;
  minWidth: number|null|undefined;
  minHeight: number|null|undefined;
  sizing: string|null|undefined;

  /**
   * Error
   */
  error: object|null|undefined;
  checkAdult: boolean|null|undefined;
  checkMedical: boolean|null|undefined;
  checkSpoof: boolean|null|undefined;
  checkViolence: boolean|null|undefined;

  /**
   * Ready event
   */
  connectedCallback(): void;

  /**
   * Start taking a picture.
   */
  capture(): void;

  /**
   * Remove file from storage
   */
  remove(): any;
}
